[{"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\index.tsx":"1","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\serviceWorker.ts":"2","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\store.tsx":"3","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\axios.tsx":"4","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\actions\\rulesetsActions.tsx":"5","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\reducers\\rulesetsReducer.tsx":"6","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\containers\\ruleset.tsx":"7","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\reducers\\cashbacksReducer.tsx":"8","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\actions\\cashbacksActions.tsx":"9","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\containers\\cashback.tsx":"10","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\reducers\\transactionsReducer.tsx":"11","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\actions\\transactionsActions.tsx":"12","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\containers\\transaction.tsx":"13","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\containers\\header.tsx":"14","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\routes.tsx":"15"},{"size":727,"mtime":1611661000249,"results":"16","hashOfConfig":"17"},{"size":5201,"mtime":1611600895194,"results":"18","hashOfConfig":"17"},{"size":1275,"mtime":1611654392027,"results":"19","hashOfConfig":"17"},{"size":99,"mtime":1611603572771,"results":"20","hashOfConfig":"17"},{"size":4334,"mtime":1611650886507,"results":"21","hashOfConfig":"17"},{"size":1502,"mtime":1611651233928,"results":"22","hashOfConfig":"17"},{"size":2336,"mtime":1611944652334,"results":"23","hashOfConfig":"17"},{"size":962,"mtime":1611653621302,"results":"24","hashOfConfig":"17"},{"size":1890,"mtime":1611653082539,"results":"25","hashOfConfig":"17"},{"size":1236,"mtime":1611653359123,"results":"26","hashOfConfig":"17"},{"size":1589,"mtime":1611655549814,"results":"27","hashOfConfig":"17"},{"size":5013,"mtime":1611655502050,"results":"28","hashOfConfig":"17"},{"size":2186,"mtime":1611676112185,"results":"29","hashOfConfig":"17"},{"size":463,"mtime":1611674278669,"results":"30","hashOfConfig":"17"},{"size":690,"mtime":1611673508638,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"zhmglp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\index.tsx",[],["67","68"],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\serviceWorker.ts",[],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\store.tsx",[],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\axios.tsx",[],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\actions\\rulesetsActions.tsx",[],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\reducers\\rulesetsReducer.tsx",[],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\containers\\ruleset.tsx",["69","70","71"],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\reducers\\cashbacksReducer.tsx",[],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\actions\\cashbacksActions.tsx",["72"],"import axios from '../axios';\r\nimport { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootState, RootActions, CashbackActions } from '../store';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Cashback, Cashbacks } from '../models/cashbacks';\r\n\r\nexport type ThunkResult<R> = ThunkAction<R, RootState, undefined, CashbackActions>;\r\nexport enum CashbacksActionTypes {\r\n    FETCH_CASHBACKS = 'FETCH_CASHBACKS',\r\n    FETCH_CASHBACKS_SUCCESS = 'FETCH_CASHBACKS_SUCCESS',\r\n    FETCH_CASHBACKS_FAIL = 'FETCH_CASHBACKS_FAIL',\r\n}\r\n\r\n\r\n// Fetch Rulesets\r\ninterface FetchCashbacks {\r\n    type: CashbacksActionTypes.FETCH_CASHBACKS;\r\n}\r\n\r\ninterface FetchCashbacksSuccess {\r\n    type: CashbacksActionTypes.FETCH_CASHBACKS_SUCCESS;\r\n    payload: Cashbacks;\r\n}\r\n\r\ninterface FetchCashbacksFail {\r\n    type: CashbacksActionTypes.FETCH_CASHBACKS_FAIL;\r\n}\r\n\r\nexport const fetchCashbacks = (): ThunkResult<void> => async dispatch => {\r\n    handleFetchCashbacks(dispatch);\r\n    try {\r\n        const response: AxiosResponse<Cashback[]> = await axios.get('/cashback');\r\n        handleFetchCashbacksSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n        handleFetchCashbacksFail(dispatch);\r\n    }\r\n};\r\n\r\nexport const handleFetchCashbacksSuccess = (\r\n    dispatch: Dispatch<FetchCashbacksSuccess>,\r\n    response: any\r\n) => {\r\n    dispatch({\r\n        type: CashbacksActionTypes.FETCH_CASHBACKS_SUCCESS,\r\n        payload: response\r\n    });\r\n};\r\n\r\nexport const handleFetchCashbacksFail = (dispatch: Dispatch<FetchCashbacksFail>) => {\r\n    dispatch({\r\n        type: CashbacksActionTypes.FETCH_CASHBACKS_FAIL\r\n    });\r\n};\r\n\r\nexport const handleFetchCashbacks = (dispatch: Dispatch<FetchCashbacks>) => {\r\n    dispatch({ type: CashbacksActionTypes.FETCH_CASHBACKS });\r\n}\r\n\r\nexport type CashbacksAction =\r\n    | FetchCashbacks\r\n    | FetchCashbacksFail\r\n    | FetchCashbacksSuccess","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\containers\\cashback.tsx",["73","74"],"import React, { useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport _ from 'lodash';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCashbacks } from '../actions/rulesetsActions';\r\nimport { RootState } from '../store';\r\nimport { Cashback } from \"../models/cashbacks\";\r\n\r\nexport interface RulesetProps {\r\n    cashbacks: Cashback[];\r\n    fetchCashbacks: () => void;\r\n};\r\n\r\n\r\nconst Cashback: React.FC<RulesetProps> = props => {\r\n    const { cashbacks, fetchCashbacks } = props;\r\n    \r\n    useEffect(() => {\r\n        fetchCashbacks();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <MaterialTable\r\n                title=\"Cashback List\"\r\n                columns={[\r\n                    { title: 'id', field: '_id', editable: 'never' },\r\n                    { title: 'Transaction Id', field: 'transactionId' },\r\n                    { title: 'Amount', field: 'amount' }\r\n                ]}\r\n                data={cashbacks}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        cashbacks: _.values(state.cashbacks.items)\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchCashbacks }\r\n)(Cashback);","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\reducers\\transactionsReducer.tsx",[],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\actions\\transactionsActions.tsx",["75"],"import axios from '../axios';\r\nimport { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootState, RootActions, TransactionActions } from '../store';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Transaction, Transactions } from '../models/transaction';\r\n\r\nexport type ThunkResult<R> = ThunkAction<R, RootState, undefined, TransactionActions>;\r\nexport enum TransactionsActionTypes {\r\n    FETCH_TRANSACTIONS = 'FETCH_TRANSACTIONS',\r\n    FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS',\r\n    FETCH_TRANSACTIONS_FAIL = 'FETCH_TRANSACTIONS_FAIL',\r\n\r\n    ADD_TRANSACTION = 'ADD_TRANSACTION',\r\n    ADD_TRANSACTION_SUCCESS = 'ADD_TRANSACTION_SUCCESS',\r\n    ADD_TRANSACTION_FAIL = 'ADD_TRANSACTION_FAIL',\r\n\r\n    EDIT_TRANSACTION = 'EDIT_TRANSACTION',\r\n    EDIT_TRANSACTION_SUCCESS = 'EDIT_TRANSACTION_SUCCESS',\r\n    EDIT_TRANSACTION_FAIL = 'EDIT_TRANSACTION_FAIL',\r\n\r\n    DELETE_TRANSACTION = 'DELETE_TRANSACTION',\r\n    DELETE_TRANSACTION_SUCCESS = 'DELETE_TRANSACTION_SUCCESS',\r\n    DELETE_TRANSACTION_FAIL = 'DELETE_TRANSACTION_FAIL'\r\n}\r\n\r\n\r\n// Fetch Transactions\r\ninterface FetchTransactions {\r\n    type: TransactionsActionTypes.FETCH_TRANSACTIONS;\r\n}\r\n\r\ninterface FetchTransactionsSuccess {\r\n    type: TransactionsActionTypes.FETCH_TRANSACTIONS_SUCCESS;\r\n    payload: Transactions;\r\n}\r\n\r\ninterface FetchTransactionsFail {\r\n    type: TransactionsActionTypes.FETCH_TRANSACTIONS_FAIL;\r\n}\r\n\r\nexport const fetchTransactions = (): ThunkResult<void> => async dispatch => {\r\n    handleFetchTransactions(dispatch);\r\n    try {\r\n        const response: AxiosResponse<Transaction[]> = await axios.get('/transaction');\r\n        handleFetchTransactionsSuccess(dispatch, response.data);\r\n    } catch (e) {\r\n        handleFetchTransactionsFail(dispatch);\r\n    }\r\n};\r\n\r\nexport const handleFetchTransactionsSuccess = (\r\n    dispatch: Dispatch<FetchTransactionsSuccess>,\r\n    response: any\r\n) => {\r\n    dispatch({\r\n        type: TransactionsActionTypes.FETCH_TRANSACTIONS_SUCCESS,\r\n        payload: response\r\n    });\r\n};\r\n\r\nexport const handleFetchTransactionsFail = (dispatch: Dispatch<FetchTransactionsFail>) => {\r\n    dispatch({\r\n        type: TransactionsActionTypes.FETCH_TRANSACTIONS_FAIL\r\n    });\r\n};\r\n\r\nexport const handleFetchTransactions = (dispatch: Dispatch<FetchTransactions>) => {\r\n    dispatch({ type: TransactionsActionTypes.FETCH_TRANSACTIONS });\r\n}\r\n\r\n// Add Transactions\r\ninterface AddTransaction {\r\n    type: TransactionsActionTypes.ADD_TRANSACTION;\r\n}\r\n\r\ninterface AddTransactionsuccess {\r\n    type: TransactionsActionTypes.ADD_TRANSACTION_SUCCESS;\r\n    payload: Transaction;\r\n}\r\n\r\ninterface AddTransactionFail {\r\n    type: TransactionsActionTypes.ADD_TRANSACTION_FAIL;\r\n}\r\n\r\nexport const addTransaction = (Transaction: Transaction): ThunkResult<void> => async dispatch => {\r\n    console.log('Transaction in addTransaction in Actions: ', Transaction);\r\n    handleAddTransaction(dispatch);\r\n    try {\r\n        const response: AxiosResponse<Transaction> = await axios.post('/Transaction', Transaction);\r\n        handleAddTransactionsuccess(dispatch, response.data);\r\n        console.log('handleAddTransactionsuccess in Actions: ', response);        \r\n    } catch (e) {\r\n        handleAddTransactionFail(dispatch);\r\n    }\r\n};\r\n\r\nconst handleAddTransaction = (dispatch: Dispatch<AddTransaction>) => {\r\n    dispatch({ type: TransactionsActionTypes.ADD_TRANSACTION });\r\n};\r\n\r\nconst handleAddTransactionsuccess = (\r\n    dispatch: Dispatch<AddTransactionsuccess>,\r\n    response: Transaction\r\n) => {\r\n    console.log('handleAddTransactionsuccess response in Actions: ', response);\r\n    dispatch({ type: TransactionsActionTypes.ADD_TRANSACTION_SUCCESS, payload: response });\r\n};\r\n\r\nconst handleAddTransactionFail = (dispatch: Dispatch<AddTransactionFail>) => {\r\n    dispatch({ type: TransactionsActionTypes.ADD_TRANSACTION_FAIL });\r\n};\r\n\r\n// Delete Transaction\r\ninterface DeleteTransaction {\r\n    type: TransactionsActionTypes.DELETE_TRANSACTION;\r\n}\r\n\r\ninterface DeleteTransactionsuccess {\r\n    type: TransactionsActionTypes.DELETE_TRANSACTION_SUCCESS;\r\n    payload: number;\r\n}\r\n\r\ninterface DeleteTransactionFail {\r\n    type: TransactionsActionTypes.DELETE_TRANSACTION_FAIL;\r\n}\r\n\r\nexport const deleteTransaction = (deletedTransactionId: number): ThunkResult<void> => async dispatch => {\r\n    dispatch({ type: TransactionsActionTypes.DELETE_TRANSACTION });\r\n    try {\r\n        await axios.put(`/Transaction/delete/${deletedTransactionId}`);\r\n        dispatch({\r\n            type: TransactionsActionTypes.DELETE_TRANSACTION_SUCCESS,\r\n            payload: deletedTransactionId\r\n        });\r\n    } catch (e) {\r\n        dispatch({ type: TransactionsActionTypes.DELETE_TRANSACTION_FAIL });\r\n    }\r\n};\r\n\r\nexport type TransactionsAction =\r\n    | FetchTransactions\r\n    | FetchTransactionsFail\r\n    | FetchTransactionsSuccess\r\n    | AddTransaction\r\n    | AddTransactionFail\r\n    | AddTransactionsuccess\r\n    | DeleteTransaction\r\n    | DeleteTransactionsuccess\r\n    | DeleteTransactionFail;","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\containers\\transaction.tsx",["76","77"],"import React, { useEffect } from \"react\";\nimport MaterialTable from \"material-table\";\nimport _ from 'lodash';\nimport { connect } from \"react-redux\";\nimport { fetchTransactions, addTransaction, deleteTransaction } from '../actions/transactionsActions';\nimport { RootState } from '../store';\nimport { Transaction } from \"../models/transaction\";\n\nexport interface TransactionProps {\n    transactions: Transaction[];\n    fetchTransactions: () => void;\n    addTransaction: (transaction: Transaction) => void;\n    deleteTransaction: (rulesetId: String) => void;\n};\n\n\nconst TransactionComponent: React.FC<TransactionProps> = props => {\n    const { transactions, fetchTransactions, addTransaction, deleteTransaction } = props;\n    \n    useEffect(() => {\n        fetchTransactions();\n    }, []);\n\n    useEffect(() => {\n        fetchTransactions();\n    }, [addTransaction, deleteTransaction]);\n\n    return (\n        <div>\n            <MaterialTable\n                title=\"Transaction List\"\n                columns={[\n                    { title: 'id', field: '_id', editable: 'never' },\n                    { title: 'Date', field: 'date' },\n                    { title: 'Transaction Id', field: 'id', type: 'numeric' },\n                    { title: 'Customer Id', field: 'customerId', type: 'numeric' }\n                ]}\n                data={transactions}\n                editable={{\n                    onRowAdd: transaction =>\n                        new Promise(resolve => {\n                            addTransaction(transaction);\n                            resolve(fetchTransactions());\n                        }),\n                    onRowDelete: transaction =>\n                        new Promise((resolve, reject) => {\n                            deleteTransaction(transaction._id);\n                            resolve(fetchTransactions())\n                        }),\n                }}\n            />\n        </div>\n    )\n};\n\nconst mapStateToProps = (state: RootState) => {\n    return {\n        transactions: _.values(state.transactions.items)\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { fetchTransactions, addTransaction, deleteTransaction }\n)(TransactionComponent);\n","C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\containers\\header.tsx",[],"C:\\Users\\VideshHegde\\Downloads\\react-ts-redux-crud-master\\react-ts-redux-crud-master\\src\\routes.tsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":19,"column":50,"nodeType":"84","messageId":"85","endLine":19,"endColumn":61},{"ruleId":"86","severity":1,"message":"87","line":23,"column":8,"nodeType":"88","endLine":23,"endColumn":10,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"87","line":27,"column":8,"nodeType":"88","endLine":27,"endColumn":35,"suggestions":"90"},{"ruleId":"82","severity":1,"message":"91","line":4,"column":21,"nodeType":"84","messageId":"85","endLine":4,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":15,"column":7,"nodeType":"84","messageId":"94","endLine":15,"endColumn":39},{"ruleId":"86","severity":1,"message":"95","line":20,"column":8,"nodeType":"88","endLine":20,"endColumn":10,"suggestions":"96"},{"ruleId":"82","severity":1,"message":"91","line":4,"column":21,"nodeType":"84","messageId":"85","endLine":4,"endColumn":32},{"ruleId":"86","severity":1,"message":"97","line":22,"column":8,"nodeType":"88","endLine":22,"endColumn":10,"suggestions":"98"},{"ruleId":"86","severity":1,"message":"97","line":26,"column":8,"nodeType":"88","endLine":26,"endColumn":43,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"@typescript-eslint/no-unused-vars","'editRuleset' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRulesets'. Either include it or remove the dependency array.","ArrayExpression",["102"],["103"],"'RootActions' is defined but never used.","@typescript-eslint/no-redeclare","'Cashback' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'fetchCashbacks'. Either include it or remove the dependency array.",["104"],"React Hook useEffect has a missing dependency: 'fetchTransactions'. Either include it or remove the dependency array.",["105"],["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [fetchRulesets]",{"range":"117","text":"118"},"Update the dependencies array to be: [addRuleset, deleteRuleset, fetchRulesets]",{"range":"119","text":"120"},"Update the dependencies array to be: [fetchCashbacks]",{"range":"121","text":"122"},"Update the dependencies array to be: [fetchTransactions]",{"range":"123","text":"124"},"Update the dependencies array to be: [addTransaction, deleteTransaction, fetchTransactions]",{"range":"125","text":"126"},[757,759],"[fetchRulesets]",[817,844],"[addRuleset, deleteRuleset, fetchRulesets]",[573,575],"[fetchCashbacks]",[782,784],"[fetchTransactions]",[846,881],"[addTransaction, deleteTransaction, fetchTransactions]"]